"""
A Flask web server that provides the API endpoints for the Bureau-X dashboard.

It serves the main HTML page and provides endpoints for the frontend to
fetch the latest action plans generated by the agent.
"""

from flask import Flask, request, jsonify, render_template
import logging

# --- Flask App Initialization ---
app = Flask(__name__)
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - PROTOCOL - %(levelname)s - %(message)s"
)
# -----------------------------

# --- In-Memory Storage ---
# A simple list to store all plans received during the server's runtime.
all_received_plans = []
# -------------------------


@app.route('/')
def dashboard():
    """Serves the main dashboard page and passes the API key."""
    google_api_key = "AIzaSyAjVZTu_DgP1P-89I8-VcJAhnMO3Vv-7Yw"
    return render_template('index.html', maps_api_key=google_api_key)


@app.route("/recommend", methods=["POST"])
def handle_recommendation():
    """
    An endpoint for the agentic engine (main.py) to post new plans.
    """
    global all_received_plans
    data = request.json

    if not data or "plan" not in data or "source_event" not in data:
        logging.error("Invalid data received. Missing 'plan' or 'source_event'.")
        return jsonify({"status": "error", "message": "Invalid data format"}), 400

    all_received_plans.append(data)

    plan_title = data.get("plan", {}).get("plan_title", "N/A")
    event_id = data.get("source_event", {}).get("eventId", "N/A")
    logging.info(f"New plan received and stored: '{plan_title}' for event {event_id}")

    return jsonify({"status": "success", "message": "Plan received and stored."})


@app.route("/get-all-plans", methods=["GET"])
def get_all_plans():
    """
    An endpoint for the dashboard frontend to fetch all received plans.
    """
    return jsonify(all_received_plans)


if __name__ == "__main__":
    app.run(debug=True, port=5000)
